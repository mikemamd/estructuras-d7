<?php
/**
 * @file Estructura de Servicio
 * @author Miguel Martínez <miguel01amd@gmail.com>
 * @package Estructuras | Drupal 7
 * @info Este module muestra la estructura básica de un consumo de servicio
 * @vertion dev 1.0.0.0
 */

/**
 * ESTE MÓDULO NECESITA DE LA INSTALACIÓN PREVIA DE
 * MODULO "SERVICES 3.x" Y SU CONFIGURACIÓN
 */

 // Se carga la libreria para acceder a sus métodos
 module_load_include('inc', 'structureServices', 'structureServices.services');

/**
 * Define los permisos para visualizar el contenido
 * Estos permisos deberán ser activados en /admin/people/permissions
 * Implements hook_permission().
 * @return array (permisions)
 */
function structureServices_permission() {
  return array(
    'estructuras d7' => array(
      'title' => 'Permiso general para acceso a contenido',
    ),
    'estructuras serv' => array(
        'title' => 'Permiso para consumir el servicio',
    ),
  );
}

/**
 * Declara las URLS para que Drupal las indexe
 * Implements hook_menu().
 * @return array (paths)
 */
function structureServices_menu() {
  $items = [];

  /* Se genera una URL base y/o rutas especificas */
  $items['estructuras-d7'] = array(
    'title'            => 'Estructuras Drupal 7',
    'description'      => 'Página principal de Estructuras D7',
    'page callback'    => 'structureBlocks_page_empty',
    'access arguments' => array('estructuras d7'),
  );

  return $items;
}

/**
 * Callback de función para página en blanco
 * Puede sustituirese o implementarse otro método/hook
 * @return ($foo)
 * @see structureBlocks_menu()
*/
function structureServices_page_empty() {
  return '';
}

/**
 * Activa los bloques y los indexa en drupal
 * Implements hook_block_info().
 * @blocks
 *   home_header
 */
function structureServices_block_info() {
  $blocks = [];
  $blocks['home_blog'] = array(
    'info'       => 'Home | Header', // Título del bloque en CMS
    'status'     => TRUE,
    'region'     => 'content', // Región de Drupal donde se mostrará
    'cache'      => DRUPAL_NO_CACHE,
    'visibility' => BLOCK_VISIBILITY_LISTED,
    'pages'      => 'estructuras-d7', // Se puede hacer uso de wildcard (/%)
    'weight'     => 2, // Posición en que se mostrará
  );

  return $blocks;
}

/*
 * Implements hook_block_view().
 * @params array ($delta)
 *  $delta será un arreglo con machine name
 *  del module dentro del CMS
 */
function structureServices_block_view($delta = '') {
  $block = $content = [];

  switch ($delta) {
    case 'home_blog':
       // Se llama a la misma fución del servicio para la primer carga del contenido
        $content = structureServices_servContent()->data;
        $block['content'] = theme('home_blog', array('content' => $content));;
      break;
    /*
    case 'home_example1':
        $block['content'] = structureBlocks_exaple1();
      break;
    case 'home_example2':
        $block['content'] = structureBlocks_exaple2();
      break;
    case 'home_example3':
        $block['content'] = structureBlocks_exaple3();
      break;
    */
  }

  return $block;
}

/*
 * Asigna un .tpl especifico para el despliegue del bloque
 * Implements hook_theme().
 */
function structureServices_theme() {
  $theme = [];
  $theme['home_blog'] = [ 'template' => 'templates/block-blog' ];
  /*
  $theme['home_example1'] = [ 'template' => 'templates/home_example1' ];
  $theme['home_example2'] = [ 'template' => 'templates/home_example2' ];
  $theme['home_example2'] = [ 'template' => 'templates/home_example3' ];
  */
  return $theme;
}
